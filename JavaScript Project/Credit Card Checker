/* Objective:
The company that you work for suspects that credit card distributors have been mailing out cards that have invalid numbers. In this project, you have the role of a clerk who checks if credit cards are valid.
*/

// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8];
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9];
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6];
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5];
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6];

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5];
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3];
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4];
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5];
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4];

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4];
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9];
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3];
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3];
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5];


// Add your functions below:
function validateCred(array){
  let sum = 0
  for(let i=array.length-1;i>=0;i-=2){
    sum+=array[i]
    if(array[i-1]){
      let nextDigit = array[i-1]
      nextDigit*2 > 9 ? sum+=nextDigit*2-9 : sum+=nextDigit*2
    }
  }
  return sum%10 == 0
  //return creditcard validation
}
// console.log(validateCred(invalid2))

function findInvalidCards(arrCardToCheck){
  return arrCardToCheck.filter(card => !validateCred(card))
}
console.log(findInvalidCards(batch))

const companiesId = {
  companyIds: [
    {id:3,name:'Amex (American Express)'},
    {id:4,name:'Visa'},
    {id:5,name:'Mastercard'},
    {id:6,name:'Discover'},
  ],
  addCompanyCode(id,name){this.companyIds.push({id,name})}
} 

function idInvalidCardCompanies(arrInvalidCard){
  let arrCompany = []
  let idArr = companiesId.companyIds.map(item => {return item.id})
  arrInvalidCard.forEach(card => {
    let index = idArr.indexOf(card[0])
    if(index==-1 && arrCompany.indexOf('Company not found')==-1){
      arrCompany.push('Company not found')
    }
    if(index>-1 && arrCompany.indexOf(companiesId.companyIds[index].name)==-1){
      arrCompany.push(companiesId.companyIds[index].name)
    }
  })
  console.log(arrCompany)
  return arrCompany
}

idInvalidCardCompanies(findInvalidCards(batch))

function convertToArrNumber (string){
  return string.split('').map(char => {return Number.parseInt(char)})
}

/** Convert invalid numbers to the nearest greater valid numbers -> we can then check if this number hasnt been in used by any user yet */
function correctToValid (card){
  //increment card number until get the next valid number
  let newCardNumber = Number.parseInt(card.map(r => r.toString()).join(''))
  let newCard
  do{
    newCardNumber++
    newCard = convertToArrNumber(newCardNumber.toString())
  }while(!validateCred(newCard))
  console.log(newCard)
  return newCard
}


